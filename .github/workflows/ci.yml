name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      NLU_APIKEY: ${{ secrets.NLU_APIKEY }}
      NLU_URL:    ${{ secrets.NLU_URL }}
      DEV_MODE:   "true"

    steps:
      # 1️⃣  Checkout code
      - uses: actions/checkout@v4

      # 2️⃣  Python toolchain
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3️⃣  Cache pip downloads
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4️⃣  Install deps (core + dev)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install -e ".[dev]"

      # 5️⃣  Restore cached pre-commit hook environments
      - name: Restore pre-commit envs
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key:  ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-precommit-

      # 6️⃣  Lint & format checks (driven by .pre-commit-config.yaml)
      - name: Lint and format (pre-commit)
        run: pre-commit run --all-files --hook-stage manual

      # 7️⃣  Tests + coverage
      - name: Run tests with coverage
        run: |
          pytest \
            --cov=notebook_service \
            --cov-report=term-missing \
            --cov-config=.coveragerc \
            -q

      # 8️⃣  Build Docker image (optional artifact)
      - name: Build Docker image
        run: docker build . --tag notebook-to-prod:ci

      # 9️⃣  Test Docker image
      - name: Run container & smoke-test
        run: |
          docker run -d --rm -p 8000:8000 \
            --env NLU_APIKEY="${{ secrets.NLU_APIKEY }}" \
            --env NLU_URL="${{ secrets.NLU_URL }}" \
            notebook-to-prod:ci
          sleep 5
          curl -f http://localhost:8000/run/example
